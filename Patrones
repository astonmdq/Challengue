Se utilizo inyección de dependencia al momento de interactuar con la base de datos. Esto es, en vez de que el controlador acceda directamente a la base de datos, se inyecto un objeto en la creación del controlador de tipo repositorio, el cual implementa una interfaz. Por otro lado se declaro un atributo dentro del controlador del mismo tipo de interfaz.
La ventaja de utilizar este patron es que nos permite reemplazar la implementación de la interfaz de manera muy simple ya que solo debemos realizar la nueva implementación y registrarla en nuestro startup.cs. La reducción de acoplamiento entre las clases nos permite un mejor manejo de los cambios futuros y la complejidad de nuestro software. El cliente( en este caso el controlador) no necesita conocer como las dependencias son implementadas.
Por otro lado genera un código más limpio ya que centraliza la creación de los elementos en el lugar donde esta el conocimiento y no en el cliente.
